---
import siteConfig from '@/site-config'
import { getImage } from 'astro:assets'
import '@/styles/global.css'
import '@/styles/prose.css'
import '@/styles/dot.css'
import faviconSrc from '../images/favicon.png'

interface Props {
  title?: string
  description?: string
  image?: { src: string; alt?: string }
  pageType?: 'website' | 'article'
}

const { description = '', image = siteConfig.image, pageType = 'website' } = Astro.props

const title = [Astro.props.title, siteConfig.title].filter(Boolean).join(' | ')

const resolvedImage = image?.src
  ? {
      src: new URL(image.src, Astro.site).toString(),
      alt: image.alt,
    }
  : undefined

const appleTouchIcon = await getImage({
  src: faviconSrc,
  width: 180,
  height: 180,
  format: 'png'
})
const faviconx = await getImage({ src: faviconSrc, format: 'png' })

const canonicalURL = new URL(Astro.request.url, Astro.site)

function formatCanonicalURL(url: string | URL) {
  const path = url.toString()
  const hasQueryParams = path.includes('?')
  if (hasQueryParams) path.replace(/\/?$/, '')
  return path.replace(/\/?$/, hasQueryParams ? '' : '/')
}
---

<!-- High Priority Global Metadata -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<title>{title}</title>
<meta name="generator" content={Astro.generator} />
<meta name="darkreader-lock">

<!-- Low Priority Global Metadata -->
<link rel="icon" href="/favicon.ico" sizes="32x32" />
<link rel="icon" href={faviconx.src} type="image/png" />
<link rel="apple-touch-icon" href={appleTouchIcon.src} />
<link rel="manifest" href="/manifest.json" />

<link rel="sitemap" href="/sitemap-index.xml" />
<link rel="alternate" type="application/rss+xml" href="/rss.xml" title="RSS" />

<!-- Page Metadata -->
<link rel="canonical" href={formatCanonicalURL(canonicalURL)} />
<meta name="description" content={description} />

<!-- Open Graph / Facebook -->
<meta property="og:type" content={pageType} />
<meta property="og:url" content={formatCanonicalURL(canonicalURL)} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
{resolvedImage?.src && <meta property="og:image" content={resolvedImage.src} />}
{resolvedImage?.alt && <meta property="og:image:alt" content={resolvedImage.alt} />}

<!-- X / Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={formatCanonicalURL(canonicalURL)} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
{resolvedImage?.src && <meta property="twitter:image" content={resolvedImage.src} />}
{resolvedImage?.alt && <meta name="twitter:image:alt" content={resolvedImage?.alt} />}

<script>
  import nprogress from 'nprogress'

  document.addEventListener('astro:before-preparation', () => {
    nprogress.start()
  })

  document.addEventListener('astro:page-load', () => {
    nprogress.done()
  })

  var _paq = window._paq = window._paq || [];
  /* tracker methods like "setCustomDimension" should be called before "trackPageView" */
  _paq.push(['trackPageView']);
  _paq.push(['enableLinkTracking']);
  (function() {
    var u="https://stats.ptr.moe/";
      _paq.push(['setTrackerUrl', u+'86eff12f2496']);
    _paq.push(['setSiteId', '1']);
    var d=document, g=d.createElement('script'), s=d.getElementsByTagName('script')[0];
      g.async=true; g.src=u+'dd168412e25a.js'; s.parentNode.insertBefore(g,s);
  })();
</script>
